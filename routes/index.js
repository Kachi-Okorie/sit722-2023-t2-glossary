var express = require('express');
var router = express.Router();

const nameList = [
  { 'id': 1, 'Term': 'DevOps', 'Description': "DevOps makes it possible for formerly separate tasks like development, IT operations, quality engineering, and security to coordinate and collaborate. It unifies people, process, and technology in application design, development, delivery, and operations by combining development (Dev) and operations (Ops)", 'References': "mijacobs (2023). What is DevOps? - Azure DevOps. [online] learn.microsoft.com. Available at: https://learn.microsoft.com/en-us/devops/what-is-devops" },
  {'id': 2, 'Term': 'Agile', 'Description': 'Agile is a project management methodology that emphasises incremental and iterative project completion phases. Instead of top-down administration and adhering to a predetermined plan, the strategy places a higher priority on speedy delivery, flexibility, and cooperation.', 'References': 'Coursera. (2023). What Is Agile? And When to Use It. [online] Available at: https://www.coursera.org/articles/what-is-agile-a-beginners-guide' },
  {'id': 3, 'Term': 'Cloud Computing', 'Description': 'The term "cloud computing" refers to an abstraction of the network, storage, and compute resources that have been put together as a platform for the deployment and scalability of software and hardware. Most cloud users use public cloud services over the internet, which are hosted in distant data centres that are managed by cloud  providers.', 'References': 'Knorr, E. (2018). What is cloud computing? Everything you need to know now. [online] InfoWorld. Available at: https://www.infoworld.com/article/2683784/what-is-cloud-computing.html'},
  {'id': 4, 'Term': 'Microservices', 'Description': 'One of the key components of cloud-native computing are microservices. It splits large applications into smaller, loosely linked pieces, facilitating the development of flexible and robust software by developers. Additionally, the shorter development cycles that microservices enable speed up innovation and improve user experience.', 'References': 'Chris Tozzi (2022). An intro to cloud-native microservices and how to build them | TechTarget. [online] Available at: https://www.techtarget.com/searchapparchitecture/tip/An-intro-to-cloud-native-microservices-and-how-to-build-them'},
  {'id': 5, 'Term': 'Monolith Architecture', 'Description': 'In a monolithic architecture, the operating system kernel is created to offer all operating system functions in a single, massive binary, including memory management, process scheduling, device drivers, and file systems. As a result, all code executes in kernel space, with no distinction between kernel-level and user-level processes.', 'References': 'GeeksforGeeks. (2020). Monolithic Architecture. [online] Available at: https://www.geeksforgeeks.org/monolithic-architecture/'},
  {'id': 6, 'Term': 'Orchestration', 'Description': 'In a centralised approach known as orchestration, a central component known as the orchestrator is in charge of overseeing and directing interactions amongst microservices. Examples of orchestration tools are Kubernetes and Docker Swarm.', 'References': 'Kanjilal, J. (2023). Orchestration and choreography in .NET microservices. [online] InfoWorld. Available at: https://www.infoworld.com/article/3687638/orchestration-and-choreography-in-net-microservices.html#:~:text=Microservices%20orchestration%20refers%20to%20a'},
  {'id': 7, 'Term': 'Automation', 'Description': 'IT departments and developers can automatically set up, change, and remove cloud resources thanks to cloud automation. Cloud automation is not a feature of the cloud; rather, it requires knowledge and the usage of specialised tools. Some automation tools include, puppet, ansible, kubernetes, AWS cloud formation, and so on.', 'References': 'Perry, Y. (2019). Cloud Automation: Why, Where and How. [online] bluexp.netapp.com. Available at: https://bluexp.netapp.com/blog/cloud-automation-why-where-and-how-cvo-blg#H4_4'},
  {'id': 8, 'Term': 'Docker', 'Description': 'A software platform called Docker makes it simple to develop, test, and deploy applications. Software is packaged by Docker into standardised units called containers that contain all of the necessary code, libraries, system tools, and runtime.', 'References': 'Amazon Web Services, Inc. (n.d.). What is Docker? | AWS. [online] Available at: https://aws.amazon.com/docker/#:~:text=Docker%20is%20a%20software%20platform'},
  {'id': 9, 'Term': 'Kubernetes', 'Description': 'A portable, adaptable, open-source platform called Kubernetes allows for declarative setup and automation of containerized workloads and services. You can use Kubernetes for things like storage orchestration, service discovery and load balancing.', 'References': 'Kubernetes. (2023). Overview. [online] Available at: https://kubernetes.io/docs/concepts/overview/'},
  {'id': 10, 'Term': 'Terraform', 'Description': 'In order to automate numerous infrastructure activities, DevOps teams frequently employ Terraform, an infrastructure as code tool. One of Terraforms primary use cases is the provisioning of cloud resources. It is an open-source provisioning tool written in the Go language.', 'References': 'Harrington, D. (2023). What is Terraform: Everything You Need to Know | Varonis. [online] www.varonis.com. Available at: https://www.varonis.com/blog/what-is-terraform'},
  { 'id': 11, 'Term': 'Staging Environment', 'Description': "Before deploying an application, staging environments are designed to test codes, builds, and updates to guarantee quality in a setting similar to a production environment. The same hardware, server, database, and cache configurations must be duplicated for the staging environment.", 'References': "Gillis, A.S. (2018). What is staging environment? | Definition from TechTarget. [online] Software Quality. Available at: https://www.techtarget.com/searchsoftwarequality/definition/staging-environment#:~:text=Staging%20environments%20are%20made%20to [Accessed 26 Jul. 2023]." },
  {'id': 12, 'Term': 'Production Environment', 'Description': 'A real-time setting where software is used and hardware is deployed and relied upon for organisation or business everyday activities is referred to as a production environment. The product has been delivered and must operate flawlessly in the production setting.', 'References': 'Rouse, M. (2020). Production Environment. [online] Techopedia. Available at: https://www.techopedia.com/definition/8989/production-environment [Accessed 26 Jul. 2023].' },
  {'id': 13, 'Term': 'Software Build', 'Description': 'Both the process and the end product of your software development activities can be referred to as software builds. A build in software development is, in essence, the process by which engineers turn the source code into a working, independent programme that has executable code that can be used on a desktop computer or mobile device.', 'References': 'Khrupa, A. (2022). What is a Build in Software Development? | QArea Blog. [online] Software Development Company. Available at: https://qarea.com/blog/what-is-a-build-in-software-development [Accessed 26 Jul. 2023].'},
  {'id': 14, 'Term': 'Continuous Integration', 'Description': 'Continuous integration is always referred to as "CI" in CI/CD, and it is a method that automates development. A successful CI involves routinely building, testing, and merging new code changes to an app into a shared repository. It is a solution to the issue of having too many potentially incompatible branches of an app in development at once.', 'References': 'Redhat (2022). What is CI/CD? [online] Redhat.com. Available at: https://www.redhat.com/en/topics/devops/what-is-ci-cd.'},
  {'id': 15, 'Term': 'Continuous Delivery', 'Description': 'It often means that an operations team can deploy a developers changes to an active production environment once they have been automatically bug-tested and submitted to a repository. It provides a solution to the issue of the development and business teams limited visibility and communication.', 'References': 'Redhat (2022). What is CI/CD? [online] Redhat.com. Available at: https://www.redhat.com/en/topics/devops/what-is-ci-cd.'},
  {'id': 16, 'Term': 'Continuous Deployment', 'Description': 'It describes the process of automatically pushing a developers changes from the repository to the live environment, where users can access them. It deals with the issue of operations teams being overburdened with manual tasks that impede app delivery. By automating the following pipeline stage, it expands on the advantages of continuous delivery.', 'References': 'Redhat (2022). What is CI/CD? [online] Redhat.com. Available at: https://www.redhat.com/en/topics/devops/what-is-ci-cd.'},
  {'id': 17, 'Term': 'SCM', 'Description': 'Software Configuration Management (SCM) is a subfield of software engineering that offers a better method for addressing, planning, and managing changes to requirements, codes, teams, and other project-related components. Version control, recording changes, and selection of versions are the main concerns of SCM, which helps software projects be completed quickly and with the least amount of risk or error.', 'References': 'Pedamkar, P. (2023). Software Configuration Management | Complete Guide to SCM. [online] EDUCBA. Available at: https://www.educba.com/software-configuration-management/.'},
  {'id': 18, 'Term': 'GitHub', 'Description': 'A platform for online software development is called GitHub. It is employed for archiving, monitoring, and teamwork on software projects. Additionally, GitHub makes it simpler to keep track of changes and return to earlier iterations of a project. It makes it simple for developers to cooperate with one another on open-source projects and share code files.', 'References': 'Juviler, J. (2022). What Is GitHub? (And What Is It Used For?). [online] blog.hubspot.com. Available at: https://blog.hubspot.com/website/what-is-github-used-for.'},
  {'id': 19, 'Term': 'Acceptance Test', 'Description': 'A method of software testing called "acceptance testing" involves evaluating a systems acceptability. This tests main objective is to determine whether the system complies with business requirements and determine whether it is suitable for delivery.', 'References': 'pp_pankaj (2019). Acceptance testing | software testing - geeksforgeeks. [online] GeeksforGeeks. Available at: https://www.geeksforgeeks.org/acceptance-testing-software-testing/.'},
  {'id': 20, 'Term': 'CICD Pipeline', 'Description': 'The continuous integration/continuous delivery (CI/CD) pipeline is an agile DevOps workflow with the goal of delivering software on a regular basis with high reliability. DevOps teams may build code, integrate it, run tests, deliver releases, and distribute changes to the software collaboratively and in real-time thanks to the iterative, as opposed to linear, process.', 'References': 'IBM Cloud Education (2021). What Is the CI/CD Pipeline? [online] www.ibm.com. Available at: https://www.ibm.com/cloud/blog/ci-cd-pipeline.'}

]

/* GET home page. */
router.get('/', function (req, res, next) {
  res.render('index', { title: 'Kachis SIT722 Glossary', sub: 'ABC', names: nameList });
});


module.exports = router;
